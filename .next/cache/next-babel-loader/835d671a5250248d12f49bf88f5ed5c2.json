{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Menu from \"antd/lib/menu\";\nimport _Icon from \"antd/lib/icon\";\nimport _Col from \"antd/lib/col\";\nvar _jsxFileName = \"C:\\\\zss\\\\Start\\\\next-antd-app\\\\components\\\\Header.js\";\nvar __jsx = React.createElement;\n// 现在我们需要利用useEffect()方法来从接口中获取动态数据。\n// 需要先引入useState和useEffect, 然后由于还要进行跳转，所以还要引入Router和Link\n// 由于还要访问接口，所以还要引入axios和servicePath\n// 引入后用useState声明navArray和使用useEffect()获取远程数据\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport servicePath from '../config/apiUrl';\nimport '../static/style/components/header.css';\n\nconst Header = () => {\n  const {\n    0: navArray,\n    1: setArray\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(servicePath.getTypeInfo).then(res => {\n        setNavArray(res.data.data);\n        return res.data.data;\n      });\n      setNavArray(result);\n    };\n\n    fetchData();\n  }, []); //跳转到列表页\n\n  const handleClick = e => {\n    if (e.key == 0) {\n      Router.push('/index');\n    } else {\n      Router.push('/list?id=' + e.key);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(_Row, {\n    type: \"flex\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 10,\n    lg: 15,\n    xl: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"header-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\u6280\\u672F\\u80D6\"), __jsx(\"span\", {\n    className: \"header-txt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"\\u4E13\\u6CE8\\u524D\\u7AEF\\u5F00\\u53D1,\\u6BCF\\u5E74100\\u96C6\\u514D\\u8D39\\u89C6\\u9891\\u3002\")), __jsx(_Col, {\n    className: \"memu-div\",\n    xs: 0,\n    sm: 0,\n    md: 14,\n    lg: 8,\n    xl: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(_Menu, {\n    mode: \"horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(_Menu.Item, {\n    key: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(_Icon, {\n    type: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"\\u9996\\u9875\"), navArray.map(item => {\n    __jsx(_Menu.Item, {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(_Icon, {\n      type: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), item.title);\n  })))));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/zss/Start/next-antd-app/components/Header.js"],"names":["React","useState","useEffect","Router","Link","axios","servicePath","Header","navArray","setArray","fetchData","result","getTypeInfo","then","res","setNavArray","data","handleClick","e","key","push","map","item","id","title"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAO,uCAAP;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAuBR,QAAQ,CAAC,EAAD,CAArC;AACAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMQ,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMN,KAAK,CAACC,WAAW,CAACM,WAAb,CAAL,CAA+BC,IAA/B,CAChBC,GAAD,IAAS;AACLC,QAAAA,WAAW,CAACD,GAAG,CAACE,IAAJ,CAASA,IAAV,CAAX;AACA,eAAOF,GAAG,CAACE,IAAJ,CAASA,IAAhB;AACH,OAJgB,CAArB;AAMAD,MAAAA,WAAW,CAACJ,MAAD,CAAX;AACH,KARD;;AASAD,IAAAA,SAAS;AAGZ,GAdQ,EAcN,EAdM,CAAT,CAFiB,CAkBjB;;AACA,QAAMO,WAAW,GAAIC,CAAD,IAAO;AACvB,QAAIA,CAAC,CAACC,GAAF,IAAS,CAAb,EAAgB;AACZhB,MAAAA,MAAM,CAACiB,IAAP,CAAY,QAAZ;AACH,KAFD,MAEO;AACHjB,MAAAA,MAAM,CAACiB,IAAP,CAAY,cAAcF,CAAC,CAACC,GAA5B;AACH;AAGJ,GARD;;AASA,SACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,EAAjC;AAAqC,IAAA,EAAE,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAFJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,EAAE,EAAE,EAA5C;AAAgD,IAAA,EAAE,EAAE,CAApD;AAAuD,IAAA,EAAE,EAAE,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,YAAM,IAAN;AAAW,IAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,iBADJ,EAMQX,QAAQ,CAACa,GAAT,CAAcC,IAAD,IAAU;AACnB,gBAAM,IAAN;AAAW,MAAA,GAAG,EAAEA,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKD,IAAI,CAACE,KAFV;AAIH,GALD,CANR,CADJ,CANJ,CADJ,CADJ;AA2BH,CAvDD;;AAyDA,eAAejB,MAAf","sourcesContent":["// 现在我们需要利用useEffect()方法来从接口中获取动态数据。\r\n// 需要先引入useState和useEffect, 然后由于还要进行跳转，所以还要引入Router和Link\r\n// 由于还要访问接口，所以还要引入axios和servicePath\r\n// 引入后用useState声明navArray和使用useEffect()获取远程数据\r\nimport React, { useState, useEffect } from 'react';\r\nimport Router from 'next/router'\r\nimport Link from 'next/link'\r\nimport axios from 'axios'\r\nimport servicePath from '../config/apiUrl'\r\nimport '../static/style/components/header.css'\r\n\r\nimport { Row, Col, Menu, Icon } from 'antd'\r\nconst Header = () => {\r\n    const [navArray, setArray] = useState([]);\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            const result = await axios(servicePath.getTypeInfo).then(\r\n                (res) => {\r\n                    setNavArray(res.data.data)\r\n                    return res.data.data\r\n                }\r\n            )\r\n            setNavArray(result)\r\n        }\r\n        fetchData()\r\n\r\n\r\n    }, [])\r\n\r\n    //跳转到列表页\r\n    const handleClick = (e) => {\r\n        if (e.key == 0) {\r\n            Router.push('/index')\r\n        } else {\r\n            Router.push('/list?id=' + e.key)\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <Row type=\"flex\" justify=\"center\">\r\n                <Col xs={24} sm={24} md={10} lg={15} xl={12}>\r\n                    <span className=\"header-logo\">技术胖</span>\r\n                    <span className=\"header-txt\">专注前端开发,每年100集免费视频。</span>\r\n                </Col>\r\n\r\n                <Col className=\"memu-div\" xs={0} sm={0} md={14} lg={8} xl={6}>\r\n                    <Menu mode=\"horizontal\">\r\n                        <Menu.Item key=\"0\">\r\n                            <Icon type=\"home\" />\r\n                            首页\r\n                    </Menu.Item>\r\n                        {\r\n                            navArray.map((item) => {\r\n                                <Menu.Item key={item.id}>\r\n                                    <Icon type=\"home\" />\r\n                                    {item.title}\r\n                                </Menu.Item>\r\n                            })\r\n                        }\r\n                    </Menu>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header"]},"metadata":{},"sourceType":"module"}